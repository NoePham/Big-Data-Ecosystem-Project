input {
  jdbc {
    jdbc_connection_string => "jdbc:mysql://mysql-db:3306/Chinook"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    jdbc_driver_library => "/usr/share/logstash-core/lib/jars/mysql-connector-j-9.1.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    statement => "SELECT * FROM Artist"
    jdbc_paging_enabled => true
    jdbc_page_size => 1000  # Fetch 1000 rows at a time
    schedule => "* * * * *"  # Example schedule
    type => "artist"
  }
  jdbc {
    jdbc_connection_string => "jdbc:mysql://mysql-db:3306/Chinook"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    jdbc_driver_library => "/usr/share/logstash-core/lib/jars/mysql-connector-j-9.1.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    statement => "SELECT * FROM Album"
    type => "album"
    jdbc_paging_enabled => true
    jdbc_page_size => 1000  # Fetch 1000 rows at a time
    schedule => "* * * * *"  # Example schedule
  }
  jdbc {
    jdbc_connection_string => "jdbc:mysql://mysql-db:3306/Chinook"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    jdbc_driver_library => "/usr/share/logstash-core/lib/jars/mysql-connector-j-9.1.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    statement => "SELECT * FROM Employee"
    type => "employee"
    jdbc_paging_enabled => true
    jdbc_page_size => 1000  # Fetch 1000 rows at a time
    schedule => "* * * * *"  # Example schedule
  }
  jdbc {
    jdbc_connection_string => "jdbc:mysql://mysql-db:3306/Chinook"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    jdbc_driver_library => "/usr/share/logstash-core/lib/jars/mysql-connector-j-9.1.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    statement => "SELECT * FROM Customer"
    type => "customer"
    jdbc_paging_enabled => true
    jdbc_page_size => 1000  # Fetch 1000 rows at a time
    schedule => "* * * * *"  # Example schedule
  }
  jdbc {
    jdbc_connection_string => "jdbc:mysql://mysql-db:3306/Chinook"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    jdbc_driver_library => "/usr/share/logstash-core/lib/jars/mysql-connector-j-9.1.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    statement => "SELECT * FROM Invoice"
    type => "invoice"
    jdbc_paging_enabled => true
    jdbc_page_size => 1000  # Fetch 1000 rows at a time
    schedule => "* * * * *"  # Example schedule
  }
  jdbc {
    jdbc_connection_string => "jdbc:mysql://mysql-db:3306/Chinook"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    jdbc_driver_library => "/usr/share/logstash-core/lib/jars/mysql-connector-j-9.1.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    statement => "SELECT * FROM InvoiceLine"
    type => "invoiceline"
    jdbc_paging_enabled => true
    jdbc_page_size => 1000  # Fetch 1000 rows at a time
    schedule => "* * * * *"  # Example schedule
  }
}

filter {
  if [type] == "artist" {
    mutate {
      rename => { "Name" => "artist_name" }
    }
  }
  if [type] == "album" {
    mutate {
      rename => { "Title" => "album_title" }
    }
  }
  if [type] == "employee" {
    mutate {
      rename => { "LastName" => "employee_last_name" "FirstName" => "employee_first_name" }
    }
  }
  if [type] == "customer" {
    mutate {
      rename => { "LastName" => "customer_last_name" "FirstName" => "customer_first_name" }
    }
  }
  if [type] == "invoice" {
    mutate {
      rename => { "InvoiceDate" => "invoice_date" }
    }
  }
  if [type] == "invoiceline" {
    mutate {
      rename => { "UnitPrice" => "unit_price" }
    }
  }
}
output {
  if [type] == "artist" {
    elasticsearch {
      hosts => ["https://es01:9200"]
      index => "artist"
      document_id => '%{artistid}'  # Unique document ID based on both type and ArtistId
      user => "elastic"
      password => "elastic123"
      ssl => true
      ssl_certificate_verification => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  }
  else if [type] == "album" {
    elasticsearch {
      hosts => ["https://es01:9200"]
      index => "album"
      document_id => '%{albumid}'  # Unique document ID based on both type and AlbumId
      user => "elastic"
      password => "elastic123"
      ssl => true
      ssl_certificate_verification => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  }
  else if [type] == "employee" {
    elasticsearch {
      hosts => ["https://es01:9200"]
      index => "employee"
      document_id => '%{employeeid}'  # Unique document ID based on both type and EmployeeId
      user => "elastic"
      password => "elastic123"
      ssl => true
      ssl_certificate_verification => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  }
  else if [type] == "customer" {
    elasticsearch {
      hosts => ["https://es01:9200"]
      index => "customer"
      document_id => '%{customerid}'  # Unique document ID based on both type and CustomerId
      user => "elastic"
      password => "elastic123"
      ssl => true
      ssl_certificate_verification => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  }
  else if [type] == "invoice" {
    elasticsearch {
      hosts => ["https://es01:9200"]
      index => "invoice"
      document_id => '%{invoiceid}'  # Unique document ID based on both type and InvoiceId
      user => "elastic"
      password => "elastic123"
      ssl => true
      ssl_certificate_verification => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  }
  else if [type] == "invoiceline" {
    elasticsearch {
      hosts => ["https://es01:9200"]
      index => "invoiceline"
      document_id => '%{invoiceLineid}'  # Unique document ID based on both type and InvoiceLineId
      user => "elastic"
      password => "elastic123"
      ssl => true
      ssl_certificate_verification => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  }
}
